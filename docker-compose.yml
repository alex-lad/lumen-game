version: '3.7'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      - SERVICE_NAME=app
      - SERVICE_TAGS=dev
      - XDEBUG_CONFIG=remote_host=${XDEBUG_REMOTE_HOST} remote_enable=${XDEBUG_REMOTE_ENABLE}
      - PHP_IDE_CONFIG=serverName=Docker
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    tty: true
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # MySQL Service
#  db:
#    image: mysql:5.7
#    container_name: db
#    restart: unless-stopped
#    tty: true
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_DATABASE: homestead
#      MYSQL_ROOT_PASSWORD: secret
#      MYSQL_USER: homestead
#      MYSQL_PASSWORD: homestead
#      SERVICE_TAGS: dev
#      SERVICE_NAME: mysql
#    volumes:
#      - db-data:/var/lib/mysql
#      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
#    networks:
#      - app-network

# Volumes
volumes:
  mongodb_data:
    driver: local

# Docker Networks
networks:
  app-network:
    driver: bridge
